---
partial: true
---
###
# This partial searches for image files that have the same name as a post,
# then returns the srcset using them as thumbnails.
# 
# The naming format: postname_<width>x<height>.<ext>
###


# Search images that have the same name as a post
basename = @basename
images = @bricks.filter (image) -> image.basename.startsWith basename

if images?.length > 0
	# Extract width and height from image name
	validimages = 0
	for image in images
		results = /^_([0-9]+)x([0-9]+)$/.exec image.basename.slice @basename.length
		
		# Write width and height to properties
		if results?
			image.width = parseInt results?[1], 10
			image.height = parseInt results?[2], 10
			validimages++

	# Check if naming format is valid
	# 
	# case: all valid -> return srcset
	# case: some valid, some invalid -> return srcset using valid only
	# case: all invalid -> return src using an invalid image
	if validimages > 0
		# Sort images by width
		images.sort (a, b) ->
			if a.width > b.width then return 1
			else if a.width < b.width then return -1
			else return 0

		# Filter out invalid images
		images.filter (image) -> image.width?

		# Form srcset string
		srcset = ''+ images[0].path + ' ' + images[0].width + 'w'
		for index in [1..(images.length - 1)]
			srcset += ', ' + images[index].path + ' ' + images[index].width + 'w'

	# Use largest image as src as a fallback for srcset
	src = ''+ images[images.length - 1].path

	# Create img tag
	img srcset: srcset, sizes: '450px', src: src

else
	text '<!-- no brick image -->'
